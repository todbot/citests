# This is a basic workflow to help you get started with Actions

name: CItest1

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on:  ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
#        node-version: [10.x, 12.x, 14.x]
#        os: [ubuntu-latest, windows-latest, macos-latest]
        os: [windows-latest]
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

#          "%VS140COMNTOOLS%../../VC/vcvarsall.bat"
#         call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
#          dir -Recurse -Path "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise" -Filter vcvarsallbat
      - name: look at files (windows)
        continue-on-error: true
        if: matrix.os == 'windows-latest'
        run: |
          dir "C:\mingw64\bin"
          echo "====="
          dir -Recurse "C:\tools"
          dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build"
          echo "--------------"
          env
          
      - name: look at files (non-windows)
        continue-on-error: true
        if: matrix.os != 'windows-latest'
        run: |
          which make
          which gcc
          which bash        
          
      - name: make with makefile
        continue-on-error: true
        run: make

      # Runs a set of commands using the runners shell
      - name: Run multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          uname -a
          

      
