# This is a basic workflow to help you get started with Actions

name: macos

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: check xcode version
        shell: bash
        run: |
          xcodebuild -version
          clang -v
          env

      # - name: ls Applications
      #   shell: bash
      #   run: ls -al /Applications
      # - name: list homeberw
      #   shell: bash
      #   run: |
      #     brew list
          #          brew update
          #          brew upgrade
          #          brew install coreutils

          # echo "/usr/local/opt/coreutils/libexec/gnubin" >> $GITHUB_PATH
      # - name: update xcode w/ arm
      #   shell: bash
      #   run: |
      #     sudo xcode-select --reset
      #     clang -v
      #     #sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
      #     #sudo xcode-select -s "/Applications/Xcode_13.2.app"
      # #     sudo xcode-select -s "/Applications/Xcode_12.4.app"

      - name: compile
        shell: bash
        run: make

      - name: run app
        shell: bash
        run: |
          file ./testme
          ./testme

      - name: Checkout blink1-tool
        #if: steps.cache.outputs.cache-hit != 'true'
        run: git clone https://github.com/todbot/blink1-tool

      - name: Compile blink1-tool
        shell: bash
        run: cd blink1-tool && make

      #- name: Compile blink1control-tool
      #  shell: bash
      #  run: cd blink1-tool && make blink1control-tool

      - name: Codesign executable
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p poopinfresh build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p poopinfresh build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k poopinfresh build.keychain
          security find-identity -v
          /usr/bin/codesign --force -s 0B9C89313E2EDCCFB635D471A53B35A9C33B05BE ./blink1-tool/blink1-tool  -v

        # - name: Compile blink1control-tool by hand
        # shell: bash
        # run: |
        #   cd blink1-tool/blink1control-tool
        #   ls -al
        #   #make curl-setup
        #   tar xzf curl-7.78.0.tar.gz
        #   cd curl-7.78.0 && CFLAGS="-arch x86_64 -arch arm64" ./configure --prefix="`pwd`/../curl-macosx" --disable-shared --disable-ftp --disable-file --disable-ldap --disable-ldaps --disable-rtsp --disable-telnet --disable-tftp --disable-pop3 --disable-imap --disable-smb --disable-smtp --disable-gopher --disable-mqtt --disable-manual --without-zlib --without-brotli --without-zstd --without-librtmp --without-libssh2 --without-ssl --without-quiche --without-zsh-functions-dir --without-fish-functions-dir --disable-crypto-auth --disable-verbose && make && make install
        #   cd ..
        #   ls -al
        #   ls -al curl-macosx/*
        #   make
